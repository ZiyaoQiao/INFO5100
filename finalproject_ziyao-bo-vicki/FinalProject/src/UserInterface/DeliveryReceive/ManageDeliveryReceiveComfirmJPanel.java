/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DeliveryReceive;

import EcoSystem.EcoSystem;
import Enterprise.DeliveryEnterprise;
import Enterprise.Enterprise;
import Network.Network;
import Person.GoodsList;
import Person.UserAccount;
import UserInterface.CharityReceive.ViewGoodsOrderJPanel;
import WorkRequest.TransportWorkRequest;
import WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yanfei
 */
public class ManageDeliveryReceiveComfirmJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem system;
    Enterprise enterprise;
    Network network;
    UserAccount account;

    /**
     * Creates new form ManageDeliveryReceiveComfirmJPanel
     */
    public ManageDeliveryReceiveComfirmJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Network network, EcoSystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=business;
        this.account = account;
        this.enterprise=enterprise;
        this.network = network;
        valueLabel1.setText(enterprise.getName());
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) workRequestJTable.getModel();
        dtm.setRowCount(0);
        
        if(enterprise instanceof DeliveryEnterprise){
            for(WorkRequest workRequest:((DeliveryEnterprise)enterprise).getWorkQueue().getWorkRequestList()){
                if(workRequest instanceof TransportWorkRequest){
                    TransportWorkRequest request = (TransportWorkRequest)workRequest;
                    if(request.getStatus() == 1 && request.getTransportType() == 1){
                    
                        Object[] row = new Object[7];
                        row[0] = request;
                        row[1] = request.getReceiver().getUsername();
                        row[2] = request.getStatus();
                        row[3] = request.getRequestDate();
                        row[4] = request.getTransportType();
                        row[5] = request.getFromOrganization().getLocation();
                        row[6] = request.getToOrganization().getLocation();
                        dtm.addRow(row);                
                    }
                    
                }
            }
        }
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnReject = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        valueLabel1 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        jLabel2.setText("Reject Request");
        add(jLabel2);
        jLabel2.setBounds(373, 543, 92, 29);

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject);
        btnReject.setBounds(234, 544, 92, 29);

        jLabel3.setText("Look into Request Detail");
        add(jLabel3);
        jLabel3.setBounds(373, 513, 311, 16);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView);
        btnView.setBounds(234, 508, 92, 29);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(870, 470, 75, 29);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Goods Order ", "Receiver", "Status", "Date", "TransportType", "From Location", "To Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(234, 114, 710, 353);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(860, 80, 91, 29);

        valueLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        valueLabel1.setText("Process Delivery Request From Charity");
        add(valueLabel1);
        valueLabel1.setBounds(234, 35, 386, 26);

        btnSend.setText("Process");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        add(btnSend);
        btnSend.setBounds(234, 473, 92, 29);

        jLabel1.setText("Request Received from Charity and Ready to Send");
        add(jLabel1);
        jLabel1.setBounds(373, 478, 480, 16);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Admin/6783831-cute-backgrounds.jpg"))); // NOI18N
        jLabel4.setText("120");
        add(jLabel4);
        jLabel4.setBounds(0, 0, 1200, 800);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            WorkRequest workRequest = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if(workRequest instanceof TransportWorkRequest){
                ((TransportWorkRequest)workRequest).setStatus(-1);
            }
            JOptionPane.showMessageDialog(null, "Rejected!");
            populateTable();
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
//         TODO add your handling code here:
        
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            WorkRequest workRequest = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            GoodsList goodsList = workRequest.getGoodsList();
            
            ViewGoodsOrderJPanel viewGoodsOrderJPanel = new ViewGoodsOrderJPanel(userProcessContainer,system,goodsList);
            userProcessContainer.add("viewGoodsOrderJPanel", viewGoodsOrderJPanel);

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            WorkRequest workRequest = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if(workRequest instanceof TransportWorkRequest){
//                ((TransportWorkRequest)workRequest).setTransportType(2);
            ManageDeliveryInfoJPanel manageDeliveryInfoJPanel = new ManageDeliveryInfoJPanel(userProcessContainer,workRequest);
            userProcessContainer.add("manageDeliveryInfoJPanel", manageDeliveryInfoJPanel);

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
                JOptionPane.showMessageDialog(null, "Processed!");
            }
        }

    }//GEN-LAST:event_btnSendActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel valueLabel1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
