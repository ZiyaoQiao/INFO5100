/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CharityReceive;

import EcoSystem.EcoSystem;
import Person.Goods;
import Person.GoodsList;
import WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yanfei
 */
public class ViewGoodsOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewGoodsOrderJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    WorkRequest request;
    GoodsList goodsList;
    
    public ViewGoodsOrderJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        btnEdit.setEnabled(false);
        
    }
    
    //charity receive调用 & charity send调用
    public ViewGoodsOrderJPanel(JPanel userProcessContainer, EcoSystem system, GoodsList goodsList) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.goodsList=goodsList;
        populateTable();
        btnEdit.setEnabled(true);
    }
    
    
    // citizen用
    public ViewGoodsOrderJPanel(JPanel userProcessContainer, WorkRequest request, EcoSystem system) {
        initComponents();
        btnEdit.setEnabled(false);
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.request = request;
        populateTableByRequest();
    }
    
    public void populateTableByRequest(){
        DefaultTableModel dtm = (DefaultTableModel) tblGoods.getModel();
        dtm.setRowCount(0);
        for(Goods goods:request.getGoodsList().getGoodsList()){
            Object[] row = new Object[5];
            row[0] = goods;
            row[1] = goods.getNum();
            row[2] = goods.getCondition();
            row[3] = goods.getSize();
            row[4] = goods.getWeight();
            dtm.addRow(row);
        }
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblGoods.getModel();
        dtm.setRowCount(0);
        for(Goods goods:goodsList.getGoodsList()){
            Object[] row = new Object[5];
            row[0] = goods;
            row[1] = goods.getNum();
            row[2] = goods.getCondition();
            row[3] = goods.getSize();
            row[4] = goods.getWeight();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblGoods = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        ViewPicBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PicLabel = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        tblGoods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Good Name", "Quantity", "Condition", "Size", "Weight"
            }
        ));
        jScrollPane1.setViewportView(tblGoods);

        add(jScrollPane1);
        jScrollPane1.setBounds(310, 80, 620, 228);

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(70, 330, 75, 29);

        ViewPicBtn.setText("View Pic");
        ViewPicBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewPicBtnActionPerformed(evt);
            }
        });
        add(ViewPicBtn);
        ViewPicBtn.setBounds(830, 320, 110, 29);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel2.setText("View Order");
        add(jLabel2);
        jLabel2.setBounds(310, 50, 170, 16);
        add(PicLabel);
        PicLabel.setBounds(550, 390, 230, 120);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit);
        btnEdit.setBounds(720, 320, 75, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Admin/6783831-cute-backgrounds.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1200, 800);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void ViewPicBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPicBtnActionPerformed
        // TODO add your handling code here:
        int selected = tblGoods.getSelectedRow();
        if(selected < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
        }else{
            Goods goods = (Goods)tblGoods.getValueAt(selected, 0);
            if(goods.getPicLink() != null || goods.getPicLink()!="empty"){
            ImageIcon icon = new ImageIcon(goods.getPicLink()); 
                 int conWidth = 230;
                 int conHeight = 162;
                  int imgWidth=icon.getIconWidth();  
                  int imgHeight=icon.getIconHeight();  
                 //int conWidth=PicLabel.getWidth();  
                  //int conHeight=PicLabel.getHeight();  
                  int reImgWidth;  
                  int reImgHeight;  
                  if(imgWidth/imgHeight>=conWidth/conHeight){  
                      if(imgWidth>conWidth){  
                          reImgWidth=conWidth;  
                          reImgHeight=imgHeight*reImgWidth/imgWidth;  
                      }else{  
                          reImgWidth=imgWidth;  
                          reImgHeight=imgHeight;  
                      }  
                  }else{  
                      if(imgWidth>conWidth){  
                          reImgHeight=conHeight;  
                          reImgWidth=imgWidth*reImgHeight/imgHeight;  
                      }else{  
                        reImgWidth=imgWidth;  
                          reImgHeight=imgHeight;  
                      }  
                  }

               icon=new ImageIcon(icon.getImage().getScaledInstance(reImgWidth, reImgHeight, Image.SCALE_DEFAULT)); 
               PicLabel.setIcon(icon);
            }else{
                JOptionPane.showMessageDialog(null, "no picture!");
            }
        }
    }//GEN-LAST:event_ViewPicBtnActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int selected = tblGoods.getSelectedRow();
        if(selected < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
        }else{
            Goods goods = (Goods)tblGoods.getValueAt(selected, 0);

            
            EditGoodsOrderJPanel vditGoodsOrderJPanel = new EditGoodsOrderJPanel(userProcessContainer,system,goods);
            userProcessContainer.add("vditGoodsOrderJPanel",vditGoodsOrderJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        }
    }//GEN-LAST:event_btnEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PicLabel;
    private javax.swing.JButton ViewPicBtn;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGoods;
    // End of variables declaration//GEN-END:variables
}
