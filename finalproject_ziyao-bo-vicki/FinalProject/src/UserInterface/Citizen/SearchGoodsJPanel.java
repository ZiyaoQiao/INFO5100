/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Citizen;

import EcoSystem.EcoSystem;
import Enterprise.CharityEnterprise;
import Enterprise.Enterprise;
import Network.Network;
import Person.Goods;
import Person.GoodsList;
import Person.UserAccount;
import WorkRequest.SendWorkRequest;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yanfei
 */
public class SearchGoodsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer; 
    EcoSystem system;
    Network network;
    Enterprise enterprise;
    UserAccount account;
    GoodsList allGoodsList;
    
    public SearchGoodsJPanel() {
    }
    /**
     * Creates new form SearchGoodsJPanel
     */
    public SearchGoodsJPanel(JPanel userProcessContainer,UserAccount account, Enterprise enterprise, Network network,EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        this.network = network;
        this.enterprise = enterprise;
        this.account = account;
        allGoodsList = new GoodsList();
        populateComboBox();
    }
    public void populateComboBox(){
        CharityComboBox.removeAllItems();
        for(Enterprise ent:network.getEnterpriseDirectory().getEnterpriseList()){
            if(ent instanceof CharityEnterprise){
                CharityComboBox.addItem(ent);
            }
        }
    }

    public void displayAllResult(){
        DefaultTableModel model = (DefaultTableModel) tblSearchResult.getModel();
        
        model.setRowCount(0);
        CharityEnterprise ent = (CharityEnterprise) CharityComboBox.getSelectedItem();
        allGoodsList = new GoodsList();
        for(GoodsList goodsList: ent.getGoodsList()){
            for(Goods goods:goodsList.getGoodsList()){
                    Object[] row = new Object[2];
                    row[0] = goods;
                    row[1] = goods.getNum();
                    allGoodsList.getGoodsList().add(goods);
                    model.addRow(row);
            }
        }
//            for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
//                if(ent instanceof CharityEnterprise){
//                   for(GoodsList goodsList:((CharityEnterprise) ent).getGoodsList()){
//                       for(Goods goods: goodsList.getGoodsList()){
//                           allGoodsList.getGoodsList().add(goods);
//                           Object[] row = new Object[2];
//                           row[0] = goods;
//                           row[1] = goods.getNum();
//                           model.addRow(row);
//                       }
//                   } 
//                }
//            }
    }
    
    public void displaySearch(GoodsList list){
        DefaultTableModel model = (DefaultTableModel) tblSearchResult.getModel();
        model.setRowCount(0);
        for(Goods goods: list.getGoodsList()){
            Object[] row = new Object[2];
            row[0] = goods;
            row[1] = goods.getNum();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearchResult = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnSendRequest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        SearchTxt = new javax.swing.JTextField();
        AllBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        CharityComboBox = new javax.swing.JComboBox();
        NumTxt = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();
        PinnedBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        tblSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Goods", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tblSearchResult);

        add(jScrollPane1);
        jScrollPane1.setBounds(302, 71, 454, 152);

        btnAdd.setText("Add to Order");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd);
        btnAdd.setBounds(630, 240, 125, 29);

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Goods", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(tblOrder);

        add(jScrollPane2);
        jScrollPane2.setBounds(302, 324, 454, 146);

        btnSendRequest.setText("Send Request");
        btnSendRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendRequestActionPerformed(evt);
            }
        });
        add(btnSendRequest);
        btnSendRequest.setBounds(630, 480, 130, 29);

        jLabel2.setText("Send request for all goods in entire order to Charity");
        add(jLabel2);
        jLabel2.setBounds(302, 487, 324, 16);

        jLabel3.setText("Donees Search Exsiting Charity Inv then Add to Request");
        add(jLabel3);
        jLabel3.setBounds(300, 270, 351, 16);

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });
        add(SearchBtn);
        SearchBtn.setBounds(478, 30, 85, 29);
        add(SearchTxt);
        SearchTxt.setBounds(302, 30, 150, 26);

        AllBtn.setText("All");
        AllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllBtnActionPerformed(evt);
            }
        });
        add(AllBtn);
        AllBtn.setBounds(600, 30, 75, 29);

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        add(BackBtn);
        BackBtn.setBounds(58, 482, 75, 29);

        CharityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CharityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CharityComboBoxActionPerformed(evt);
            }
        });
        add(CharityComboBox);
        CharityComboBox.setBounds(154, 31, 130, 27);
        add(NumTxt);
        NumTxt.setBounds(302, 235, 160, 26);

        jLabel4.setText("Quantity");
        add(jLabel4);
        jLabel4.setBounds(480, 240, 60, 16);

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        add(DeleteBtn);
        DeleteBtn.setBounds(630, 510, 130, 29);

        PinnedBtn.setText("Pinned");
        PinnedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinnedBtnActionPerformed(evt);
            }
        });
        add(PinnedBtn);
        PinnedBtn.setBounds(670, 30, 86, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Admin/6783831-cute-backgrounds.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1200, 800);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        String searchText = SearchTxt.getText();
        if(searchText.equals("")){
            JOptionPane.showMessageDialog(null, "Please input search item first!");
        }else{
            GoodsList tmpGoodsList = new GoodsList();
            for(Goods goods: allGoodsList.getGoodsList()){
                if(goods.getName().equals(searchText)){
                    tmpGoodsList.getGoodsList().add(goods);
                }
            }
            displaySearch(tmpGoodsList);
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void AllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllBtnActionPerformed
        // TODO add your handling code here:
        displayAllResult();
    }//GEN-LAST:event_AllBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
                userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackBtnActionPerformed
    
    //GoodsList list = new GoodsList();
    class Tuple{
        GoodsList goodsList;
        Enterprise enterprise;
    }
    ArrayList<Tuple> list = new ArrayList<>();
    
    public void populate(){
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        for(int i = 0; i< list.size(); i++){
            Tuple tuple = list.get(i);
            for(Goods goods: tuple.goodsList.getGoodsList()){
                Object[] row = new Object[2];
                row[0] = goods;
                row[1] = goods.getNum();
                model.addRow(row);
            }

        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        int selected = tblSearchResult.getSelectedRow();
        String quantity = NumTxt.getText();
        if(selected<0 || quantity.equals("")){
            JOptionPane.showMessageDialog(null, "please select and input number");
        }else{
            Goods goods = (Goods) tblSearchResult.getValueAt(selected, 0);
            boolean numInvalid = false;
            int num = -1;
            try{
                num = Integer.parseInt(quantity);
            }catch(Exception e){
                //JOptionPane.showMessageDialog(null, "The input item should be number!");
                numInvalid = true;
            }
            
            if(num < 1||numInvalid|| num > goods.getNum()){
                JOptionPane.showMessageDialog(null, "wrong number!");
            }else{
                Enterprise ent = (Enterprise)CharityComboBox.getSelectedItem();
                boolean isExist = false;
                for(int i = 0; i< list.size(); i++){
                    if(list.get(i).enterprise == ent){
                        boolean duplicate = false;
                        for(Goods g:list.get(i).goodsList.getGoodsList()){
                            if(g.getLinkGoods() == goods){
                                g.setNum(g.getNum()+num);
                                duplicate = true;
                            }
                        }
                        if(!duplicate){
                            Goods tmpGoods = new Goods();
                            tmpGoods.setName(goods.getName());
                            tmpGoods.setNum(num);
                            tmpGoods.setLinkGoods(goods);
                            list.get(i).goodsList.getGoodsList().add(tmpGoods);
                        }
                        isExist = true;
                    }
                }
                if(!isExist){
                    Tuple tuple = new Tuple();
                    tuple.enterprise = ent;
                    tuple.goodsList = new GoodsList();
                    Goods tmpGoods = new Goods();
                    tmpGoods.setName(goods.getName());
                    tmpGoods.setLinkGoods(goods);
                    tmpGoods.setNum(num);
                    tuple.goodsList.getGoodsList().add(tmpGoods);
                    list.add(tuple);
                }
                populate();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSendRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendRequestActionPerformed
        // TODO add your handling code here:
        if(list.size()==0){
            JOptionPane.showMessageDialog(null, "no goods added");
        }else{
            for(int i = 0; i< list.size(); i++){
                Enterprise ent = list.get(i).enterprise;
                SendWorkRequest request = new SendWorkRequest();
                
                request.setGoodsList(list.get(i).goodsList);
                request.setFromEnterprise(enterprise);
                request.setRequest(2);
                request.setRequestDate(new Date());
                request.setSender(account);
                request.setStatus(1);
                request.setToEnterprise(ent);
                request.setFromOrganization(account.getOrganization());
                ent.getWorkQueue().getWorkRequestList().add(request);
                account.getWorkQueue().getWorkRequestList().add(request);
            }
            JOptionPane.showMessageDialog(null, "Request Sent!");
            list = new ArrayList<>();
            populate();
        }
    }//GEN-LAST:event_btnSendRequestActionPerformed

    private void CharityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CharityComboBoxActionPerformed
        // TODO add your handling code here:
        Enterprise ent = (Enterprise) CharityComboBox.getSelectedItem();
        if(ent!=null){
           displayAllResult();
        }
    }//GEN-LAST:event_CharityComboBoxActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int selected = tblOrder.getSelectedRow();
        if(selected < 0){
            JOptionPane.showMessageDialog(null, "please select");
        }else{
            Goods gd = (Goods)tblOrder.getValueAt(selected, 0);
            for(Tuple t: list){
                if(t.goodsList.getGoodsList().contains(gd)){
                    t.goodsList.getGoodsList().remove(gd);
                    if(t.goodsList.getGoodsList().size() == 0)
                        list.remove(t);
                    break;
                }
                    
            }
            populate();
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void PinnedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinnedBtnActionPerformed
        // TODO add your handling code here:
        JPanel jp = new JPanel();
        JFrame jf = new JFrame();
        jf.setVisible(true);
        jf.setSize(new Dimension(800,600));
        JPanel tmp = new PinRequestJPanel(account);

        JButton close = new JButton("close");
        tmp.add(close);

        jf.setContentPane(tmp);
    }//GEN-LAST:event_PinnedBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AllBtn;
    private javax.swing.JButton BackBtn;
    private javax.swing.JComboBox CharityComboBox;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JFormattedTextField NumTxt;
    private javax.swing.JButton PinnedBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSendRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTable tblSearchResult;
    // End of variables declaration//GEN-END:variables
}
